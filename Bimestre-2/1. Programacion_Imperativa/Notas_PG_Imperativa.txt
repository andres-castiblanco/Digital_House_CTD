***************************************
*** PlayGround Ejericios JavaScript ***
***************************************

// Nuestra tarea será declarar dos variables: una con el nombre edad y la otra con el nombre peso.

let edad = 23;
let peso = 50;

// Ahora, debemos crear una constante llamada EDAD_MINIMA y otra llamada EDAD_MAXIMA, a las cuales les 
// asignaremos valores numéricos 18 y 99 respectivamente.

const EDAD_MINIMA = 18;
const EDAD_MAXIMA = 99;

// Para este ejercicio, debemos declarar 4 variables de tipo let con los nombres: verdadero, nada, texto y 
// numero. A cada una de ellas, tendremos que asignarle el tipo de dato que sugiera su nombre, según corresponda.

let verdadero = true;
let nada = null;
let texto = "texto";
let numero = 3;

// Declarar y asigna dos variables: primerNumero y segundoNumero.
// Luego, declarar las variables resultadoSuma, resultadoResta, resultadoMultiplicacion, 
// resultadoDivision y en cada una almacena el resultado que corresponda.
// Por último, imprimir cada uno de los resultados utilizando console.log(nombreDeLaVariable).

let primerNumero = 100
let segundoNumero = 5

let resultadoSuma = primerNumero + segundoNumero
let resultadoResta = primerNumero - segundoNumero 
let resultadoMultiplicacion = primerNumero * segundoNumero 
let resultadoDivision = primerNumero / segundoNumero

console.log(resultadoSuma);
console.log(resultadoResta);
console.log(resultadoMultiplicacion);
console.log(resultadoDivision);

***

// Nuestra tarea es crear una función que se va a llamar ejemplo y tiene que devolver un String 
// diciendo "hola, soy una función".

function ejemplo (){
    return "hola, soy una función";
}

// En el ejemplo que presentamos hay una función que ya está creada, pero sucede que cuando la 
// invocamos, no funciona. Eso es porque la función necesita ciertos parámetros y no los tiene.

function saludar(nombre,apellido) {
    return 'Hola, ' + nombre + ' ' + apellido + '!';
}

// Escribir las siguientes tres funciones:
// - anterior: recibe un número como parámetro y devuelve ese número menos uno.
// - triple: recibe un número como parámetro y devuelve el triple de ese número.
// - anteriorDelTriple: recibe un número como parámetro y, utilizando las dos funciones anteriores, tendrá que 
// devolver el número recibido multiplicado por 3 (tres) y al resultado restarle 1 (uno).

function anterior (x){
    return x-1;
}

function triple (y){
    return y*3;
}

function anteriorDelTriple(z){
    return (z*3)-1; 
}

***

// Para este ejercicio vamos a dar tres funciones ya definidas. Nuestro trabajo será cambiarle la sintaxis y 
// volver a escribirlas para que sean funciones de tipo arrow.

function dameCinco() {
    return [1,2,3,4,5];
}

function multiplicarPorDos() {
  return 123 * 2 ;
}

function mostrarNombre() {
  return "Mi nombre es Hernán";
}

///
let dameCinco = () => [1,2,3,4,5];

let multiplicarPorDos = () => 123*2;

let mostrarNombre = () => "Mi nombre es Hernán";

// Ahora nuestro trabajo será refactorizar la función saludar() que recibe un parámetro, es decir, 
// escribirla con la sintaxis necesaria para convertirla en una arrow function.

function saludar(nombre) {
    return 'Hola, ' + nombre + '!';
}

///
let saludar = nombre => 'Hola, ' + nombre + '!';

// Y sí, solo nos falta practicar la sintaxis de una arrow function que reciba más de un parámetro. 
// Tomemos la función saludar(), que esta vez recibe un nombre y un apellido, y veamos de convertirla 
// en una arrow function. 

function saludar(nombre, ,apellido) {
    return 'Hola, ' + nombre + ' ' +  apellido + '!';
}

///
let saludar = (nombre,apellido) => 'Hola, ' + nombre + ' ' +  apellido + '!';

***

// Declaremos una variable con el nombre dato y asignémosle un valor booleano.
// Luego, deberemos hacer un if que evalúe esa variable y, si el valor es igual a  true, que imprima por 
// consola "es true". Caso contrario, que imprima por consola "es false".

let dato = "true";

if (dato="true") {
    console.log("es true");
    }else{
    console.log("es false");
}

// En este ejercicio nos viene dada una variable llamada lenguaje, que tiene asignado un string. Nuestro trabajo es 
// construir un condicional if/else para que, si la variable contiene "javascript", imprima por consola el texto 
// "Estoy aprendiendo". De lo contrario, que imprima"Lo aprenderé más adelante".

let lenguaje = "javascript";

if(lenguaje="javascript"){
    console.log("Estoy aprendiendo");
}else{
    console.log("Lo aprenderé más adelante");
}

// Debemos completar la función puedePasar para que, analizando el nombre que recibe por parámetro, determine si la 
// persona puede pasar o no. Si la persona se llama "Cosme Fulanito"", no lo dejará pasar y lo indicará retornando 
// false; si la persona se llama de otra forma, lo dejará pasar y lo indicará retornando true.

let nombre = "Natalia Natalia";
// let nombre = "Juan Perez";

function puedePasar(nombre) {
    if (nombre === "Cosme Fulanito"){
        return false;
    }
    else{
        return true;
    }
}

// El objetivo de este ejercicio es imprimir en consola un texto que irá variando según el día que contenga la 
// variable dia. Para esto, ya presentamos un código hecho con if/else que tendremos que modificar y convertirlo a 
// un switch, manteniendo el mismo resultado.

// Inicial
let dia = 'jueves'
function finDeSemana (dia) {	
	if (dia == 'viernes') {
    	console.log('buen finde')
	} else if (dia == 'lunes') {
    	console.log('buena semana')
	} else {
    	console.log('buen dia')
	}
}

// Final
let dia = 'jueves'

function finDeSemana(dia){
	switch(dia){
		case 'viernes':
			console.log('buen finde');
			break;
		case 'lunes':
			console.log('buena semana');
			break;
		default:
			console.log('buen dia');
	}
}


// El objetivo de este ejercicio es imprimir en pantalla un texto que estará condicionado de la siguiente manera. 
// Utilizando switch deberemos evaluar si la variable "día" es lunes, miércoles o viernes; y, en ese caso, debe 
// imprimir el texto "tenés clases". Para cualquier otro caso debe imprimir "no tenés clases".

// Inicial
function tengoClases(dia) {
	switch (____) {
    	//Escribe tu código aquí
	}
}

// Final
let dia = ['lunes', 'miércoles', 'viernes']
//let dia = 'jueves'

function tengoClases(dia) {
	switch (dia) {
    	case 'lunes':
			console.log('tenés clases');
			break;
		case 'miércoles':
			console.log('tenés clases');
			break;
		case 'viernes':
			console.log('tenés clases');
			break;
		default:
			console.log('no tenés clases');
	}
}

// Vamos a programar una función que se comporte como un loro. Sí, todo lo que "oye", ¡lo repite!. 
// La función debe llamarse loro y debe recibir como parámetro el texto y repetirlo 5 veces por consola.

function loro(abc){
    for(let i = 1; i <= 5; i++){
        console.log(abc);
    }
}

// En este ejercicio nuestra tarea es completar la función noParesDeContarImparesHasta. Esta función recibe un 
// número X por parámetro y cuenta la cantidad de números impares que hay desde el número 0 hasta el número X 
// (inclusive) y luego retorna ese valor. Para resolver la ejercitación debemos utilizar el for

// Inicial
function noParesDeContarImparesHasta(numero){
    // Escribe aqui tu código
}

// Final
function noParesDeContarImparesHasta(X){
let contar = 0;

    for(let numero = 1; numero <= X; numero++){
        if (numero % 2 != 0){
            contar++;
        }
    }
    return contar;
}

console.log(noParesDeContarImparesHasta(5));

// Para este ejercicio te damos la función tablaDeMultiplicar ya definida, la cual recibe un número como parámetro. 
// Queremos que al ejecutarse la función muestre por consola la tabla de multiplicar del 1 al 10 del número que reciba.
// Por ejemplo si el número que pasamos por parámetro es 5, la función deberá imprimir:
// 5 * 2 = 10
// 5 * 3 = 15
// ... hasta llegar a multiplicarlo por 10.

function tablaDeMultiplicar(numero) {
let i = 1;

	while (i <= 10) {
	    let resultado = numero * i;
	    console.log(numero + " * " + i + " = " + resultado);
	    i++;
	}
}
tablaDeMultiplicar(20);

***

// Tenemos un array con palabras sueltas que, juntas, forman una gran frase. Queremos, 
// utilizando un método de array sobre la arrayFrase , convertirlo en una oración entera, 
// y almacenar ese String en una variable llamada fraseNueva.

// Join()

let arrayFrase = [
  "No",
  "he",
  "fracasado,",
  "simplemente",
  "me",
  "he",
  "topado",
  "con",
  "diez",
  "mil",
  "soluciones",
  "equivocadas"
];

let fraseNueva = arrayFrase.join(' ');
console.log(fraseNueva);

// Pop()

let estudiantes = [
  {
    nombre: "Alvaro",
    promedio: 9,
    curso: "Android"
  },
  {
    nombre: "Daniel",
    promedio: 6,
    curso: "Full Stack"
  },
  {
    nombre: "Alexis",
    promedio: 3,
    curso: "iOS"
  }
];

//
let alumnoEgresado = estudiantes.pop();
console.log(alumnoEgresado);

// Push()
let estudiantes = [
  {
    nombre: 'Alvaro',
    promedio : 9,
    curso : 'Android',
  },
  {
    nombre: 'Daniel',
    promedio : 6,
    curso : 'Full Stack',
  },
  {
    nombre: 'Alexis',
    promedio : 3,
    curso : 'iOS',
  },
];

//
estudiantes.push(
  {
    nombre: 'Juan',
    promedio : 5,
    curso : 'iOS'
  },
  {
    nombre: 'Miguel',
    promedio : 2,
    curso : 'Android'
  }
);
console.log(estudiantes);

//
estudiantes.push(
  {
    nombre: 'Juan',
    promedio : 5,
    curso : 'iOS'
  });
estudiantes.push(
  {
    nombre: 'Miguel',
    promedio : 2,
    curso : 'Android'
  });
console.log(estudiantes);

// Shift()
let estudiantes = [
  {
    nombre: 'Alvaro',
    promedio : 9,
    curso : 'Android',
  },
  {
    nombre: 'Daniel',
    promedio : 6,
    curso : 'Full Stack',
  },
  {
    nombre: 'Alexis',
    promedio : 3,
    curso : 'iOS',
  },
];

//
let alumnoDeBaja = estudiantes.shift();

// UnShift()
let estudiantes = [
  {
    nombre: 'Alvaro',
    promedio : 9,
    curso : 'Android',
  },
  {
    nombre: 'Daniel',
    promedio : 6,
    curso : 'Full Stack',
  },
  {
    nombre: 'Alexis',
    promedio : 3,
    curso : 'iOS',
  },
];

//
estudiantes.unshift(
  {
    nombre: 'Mariana',
    promedio : 9,
    curso : 'Full Stack'
  },
  {
    nombre: 'Francisco',
    promedio : 2,
    curso : 'Android'
  }
);
console.log(estudiantes);

//
estudiantes.unshift(
  {
    nombre: 'Mariana',
    promedio : 9,
    curso : 'Full Stack'
  });
estudiantes.unshift(
  {
    nombre: 'Francisco',
    promedio : 2,
    curso : 'Android'
  });

console.log(estudiantes);

// Debemos crear una función llamada dominio que recibirá un string como "digitalhouse.com.ar" y 
// su función será retornar: "http://www.digitalhouse.com.ar".

function dominio(string) {
  if (string.startsWith("http://") || string.startsWith("https://")) {
    return string;
  } else {
    return string.replace(/^/, "http://www.");
  }
}
console.log(dominio('digitalhouse.com.ar'));

// Lo primero que necesitamos es declarar una variable llamada texto, asignándole como valor un texto (string), 
// el que queramos. Luego, utilizando la propiedad length, tendremos que imprimir en consola el total de caracteres que contiene la frase.

let texto = 'hola me llamo Samuel';
console.log(texto.length);